The goal is to scale the application. Keeping all of the code in a single script could lead to problems. So, we restructure everything to accomodate our scaling attempts. In (1) below, our root folder will be labeled cl_flask:

(1)-----------------------------------------------------------------
|-cl_flask/
  |-app/
    |-templates/
    |-static/
    |-main/
      |-__init__.py
      |-routes.py
      |-forms.py
      |-email.py
    |-errors/
      |-__init__.py
      |-handlers.py
    |-auth/
      |-__init__.py
      |-routes.py
      |-forms.py
      |-email.py
    |-migrations/
    |-tests/
      |-__init__.py
      |-tests.py
    |-venv/
    |-__init__.py
    |-config.py
    |-models.py
    |-email.py
    |-requirements.txt
--------------------------------------------------------------------

Our first move is to separate the configuration from the single-script application, as such a setup does not allow us to make changes, dynamically, to our configuration, since the application is defined globally. So, we create a factory function, create_app, that can be imported into a script, say for testing, in which changes to the configuration, say the database, can be made.