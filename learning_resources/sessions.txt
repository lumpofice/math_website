For each user, Flask creates a dictionary called session, storing key value pairs specific to the user through a cookie that has been cryptographically signed using the configured SECRET_KEY in our application's configuration file. This is important for the user experience, making the transition from one point to another in our application smoother. POST requests have access to the data a user enters for the duration of the request, but session has access to the data from request to request. So, after we implement a POST/Redirect/GET pattern---this is a pattern used to obviate the undesirable outcome of form data being submitted multiple times as the user refreshes their browser---in our application, the session dictionary is what must be accessed by the application to retrieve data previously entered by the user. Below, (1) displays the code for the application and i) how the view function uses the session object to store data entered by the user and ii) how the view function uses the redirect method to avoid the undesirable outcome of multiple submissions of user data:

(1)-----------------------------------------------------------------
app = Flask('hello')
app.config['SECRET_KEY'] = 'give it a try'
bootstrap = Bootstrap(app)
moment = Moment(app)

@app.route('/', methods=['GET', 'POST'])
@app.route('/index', methods=['GET', 'POST'])
def index():
    form = NameForm()
    if form.validate_on_submit():
        session['name'] = form.flask_name.data
        return redirect(url_for('index'))
    return render_template('index.html',
        current_time=datetime.utcnow(),
        form=form, jinja_name=session.get('name'))

@app.route('/user/<flask_name>')
def user(flask_name):
    return render_template('user.html', jinja_name=flask_name)

@app.errorhandler(404)
def page_not_found(e):
    return render_template('404.html'), 404

class NameForm(FlaskForm):
    flask_name = StringField('What is your name?', 
        validators=[DataRequired()])
    submit = SubmitField('Apologize')

if __name__ == '__main__':
    app.run(debug=True)
--------------------------------------------------------------------
